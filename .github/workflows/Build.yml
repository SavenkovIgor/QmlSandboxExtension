name: Build and deploy to GitHub Pages

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches: [ "main" ]

env:
  QT_ROOT: ${{ github.workspace }}/lib/Qt
  QT_VERSION: 6.5.1
  WASM_VERSION: 3.1.25
  AQT_VERSION: ==3.1.6

jobs:
  build:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Install latest cmake and ninja
      uses: lukka/get-cmake@latest

    - name: Install EmSdk
      uses: mymindstorm/setup-emsdk@v12
      with:
        version: ${{ env.WASM_VERSION }}
        actions-cache-folder: 'lib/emsdk-cache'

    - name: Install Qt for wasm_singlethread
      uses: jurplel/install-qt-action@v3
      with:
        aqtversion: ${{ env.AQT_VERSION }}
        version: ${{ env.QT_VERSION }}
        dir: ${{ github.workspace }}/lib
        modules: 'qtimageformats qt5compat qtshadertools'
        archives: 'qttranslations qttools qtsvg qtdeclarative qtbase icu'
        cache: true
        arch: wasm_singlethread

    - name: CMake configure
      working-directory: QmlSandbox
      run: cmake --preset=wasm_release -Wno-dev

    - name: Cmake build
      working-directory: QmlSandbox
      run: cmake --build --preset=wasm_release

    - name: Deliver qml to wasmQmlEngine folder
      run: ./project.py --deliver-qml

    - name: Npm install
      run: npm install

    - name: GitHub Action for vsce
      uses: lannonbr/vsce-action@3.0.0
      with:
        args: package

    - name: Upload .vsix file
      uses: actions/upload-artifact@v3
      with:
        name: Extension
        path: '*.vsix'

    - name: Scheck versions consistency
      if: startsWith(github.ref, 'refs/tags/v')
      run: ./project.py --check-version

    - name: Publish to Marketplace
      if: startsWith(github.ref, 'refs/tags/v') && success()
      uses: lannonbr/vsce-action@3.0.0
      with:
        args: publish -p ${{ secrets.VSCE_TOKEN }}

